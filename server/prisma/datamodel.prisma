type User {
  id: ID! @id
  nameSurname: String
  username: String! @unique
  password: String!
  userType: UserType!
  posts: [Post!]! @relation(name: "PostsToUser", onDelete: CASCADE)
  events: [Event!]! @relation(name: "EventToUser", onDelete: CASCADE)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Post {
  id: ID! @id
  title: String!
  slug: String! @unique
  postType: PostType!
  photo: String
  content: String
  publishDate: DateTime!
  viewCount: Int! @default(value: 0)
  likeCount: Int! @default(value: 0)
  user: User! @relation(name: "PostsToUser", onDelete: SET_NULL)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Event {
  id: ID! @id
  title: String!
  slug: String! @unique
  photo: String
  content: String
  publishDate: DateTime!
  startDate: DateTime
  endDate: DateTime
  viewCount: Int! @default(value: 0)
  likeCount: Int! @default(value: 0)
  user: User! @relation(name: "EventToUser", onDelete: SET_NULL)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type SiteSettings {
  id: ID! @id
  name: String!
  phone: String
  mail: String
  address: String
  mapLongitude: Float
  mapLatitude: Float
  about: String!
  aboutHome: String
  socialLinks: [SocialLink!]! @scalarList(strategy: RELATION)
}

type Link {
  id: ID! @id
  name: String!
  url: String!
}

enum UserType {
  ADMIN
  MODERATOR
}

enum PostType {
  NEWS
  ANNOUNCEMENT
}

enum SocialLink {
  FACEBOOK
  TWITTER
  INSTAGRAM
  YOUTUBE
}
