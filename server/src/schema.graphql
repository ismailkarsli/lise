scalar Upload

type Query {
  users: [User!]!
  user(id: ID!): User!

  posts(postType: PostType): [Post!]!
  post(id: ID!): Post!

  links: [Link!]!
  link(id: ID!): Link!

  siteSettings: SiteSettings!
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  updateUser(data: UpdateUserInput!, id: ID!): User!
  deleteUser(id: ID!): User!
  loginUser(data: LoginUserInput!): AuthPayload!

  createPost(data: CreatePostInput!): Post!
  updatePost(data: UpdatePostInput!, id: ID!): Post!
  deletePost(id: ID!): Post!

  updateSiteSettings(data: UpdateSiteSettings!): SiteSettings!

  createLink(data: CreateLinkInput!): Link!
  updateLink(data: UpdateLinkInput!, id: ID!): Link!
  deleteLink(id: ID!): Link!

  uploadPhoto(photo: Upload!): UploadPayload!
}

type UploadPayload {
  photo: String!
}

type User {
  id: String!
  username: String!
  password: String!
  userType: UserType!
  posts: [Post!]!
  updatedAt: String!
  createdAt: String!
}

input CreateUserInput {
  username: String!
  password: String!
  userType: UserType!
}

input UpdateUserInput {
  username: String
  password: String
  userType: UserType
}

input LoginUserInput {
  username: String!
  password: String!
}

type AuthPayload {
  token: String!
  user: User!
}

type Post {
  id: String!
  title: String!
  slug: String!
  photo: String
  content: String
  user: User!
  postType: PostType!
  publishDate: String!
  viewCount: Int
  likeCount: Int
}

input CreatePostInput {
  title: String!
  photo: String
  content: String
  postType: PostType!
  publishDate: String!
  viewCount: Int
  likeCount: Int
}

input UpdatePostInput {
  title: String
  photo: String
  content: String
  postType: PostType
  publishDate: String
  viewCount: Int
  likeCount: Int
}

type SiteSettings {
  id: String!
  name: String!
  phone: String
  mail: String
  address: String
  mapLongitude: Float
  mapLatitude: Float
  about: String
  aboutShort: String
  classCount: Int
  studentCount: Int
  teacherCount: Int
}

input UpdateSiteSettings {
  name: String
  phone: String
  mail: String
  address: String
  mapLongitude: Float
  mapLatitude: Float
  about: String
  aboutShort: String
  classCount: Int
  studentCount: Int
  teacherCount: Int
}

type Link {
  id: String!
  title: String!
  url: String!
}

input CreateLinkInput {
  title: String!
  url: String!
}

input UpdateLinkInput {
  title: String
  url: String
}

enum PostType {
  NEWS
  ANNOUNCEMENTS
  ACTIVITES
}

enum UserType {
  ADMIN
  MODERATOR
}
